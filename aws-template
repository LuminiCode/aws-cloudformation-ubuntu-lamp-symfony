AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template LAMP_Single_Instance: Create a LAMP stack
  using a single EC2 instance and a local MySQL database for storage. This
  template demonstrates using the AWS CloudFormation bootstrap scripts to
  install the packages and files necessary to deploy the Apache web server, PHP
  and MySQL at instance launch time. **WARNING** This template creates an Amazon
  EC2 instance. You will be billed for the AWS resources used if you create a
  stack from this template.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-0ac05733838eabc06
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: Ubuntu16 Web + SSH Server
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': |
          #!/bin/bash
          set -e
          set -x
          # Set timezone
          #sudo timedatectl set-timezone America/New_York

          # Upgrade
          sudo apt-get update
          # sudo apt-get upgrade -y

          # install mysql-server
          sudo apt-get install -y mysql-server
          sudo apt-get install mysql-client
          sudo apt-get install -y libmysqlclient-dev

          # install apache2
          sudo apt-get install -y apache2
          sudo apt-get install apache2-doc
          sudo apt-get install apache2-utils

          # install php
          sudo apt-get install -y libapache2-mod-php7.2
          sudo apt-get install php7.2
          sudo apt-get install php7.2-common
          sudo apt-get install php7.2-curl
          sudo apt-get install -y php7.2-dev
          sudo apt-get install -y php7.2-gd
          sudo apt-get install php-pear
          sudo apt-get install -y php-imagick
          sudo apt-get install php7.2-mysql
          sudo apt-get install -y php7.2-ps
          sudo apt-get install php7.2-xsl
          sudo apt-get install -y libmcrypt-dev

          # install zip & unzip
          sudo apt-get install -y zip
          sudo apt-get install -y unzip

          # set www-data as the owner of document root
          sudo chown ubuntu:ubuntu /var/www/html/ -R

          # install composer
          sudo php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          sudo php composer-setup.php
          sudo php -r "unlink('composer-setup.php');"
          sudo mv composer.phar /usr/local/bin/composer

          # install git
          sudo apt-get install git

          # insert example file
          cd /var/www/html
          echo "<h1> Hello World </h1>" > index.html
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
Outputs:
  WebsiteURL:
    Description: URL for newly created LAMP stack
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - WebServerInstance
          - PublicDnsName
